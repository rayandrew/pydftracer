name: CI

on:
  push:
    branches: [ main, develop, initialize ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test-and-lint:
    name: Py${{ matrix.python-version }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest] # , macOS-latest] # windows-latest
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]
        pip install build twine

    - name: Run tests with coverage
      run: |
        make test-ci

    - name: Run linting and formatting checks (Python 3.11 only)
      if: matrix.python-version == '3.11'
      run: |
        make lint
        make format-check

    - name: Run type checking (Python 3.11 only)
      if: matrix.python-version == '3.11'
      run: |
        make type-check

    - name: Build and test package (Python 3.11 only)
      if: matrix.python-version == '3.11'
      run: |
        python -m build
        twine check dist/*
        # Test package installation in fresh environment
        python -m venv test-venv
        source test-venv/bin/activate
        pip install dist/*.whl
        python -c "import dftracer; print('Package import successful')"

    - name: Upload coverage to Codecov
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: Generate and upload coverage report (Python 3.11 only)
      if: matrix.python-version == '3.11' && github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        pytest tests/ --cov=dftracer --cov-report=html --cov-report=term -n 2

    - name: Upload coverage report as artifact
      if: matrix.python-version == '3.11' && github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report-${{ matrix.python-version }}
        path: htmlcov/
